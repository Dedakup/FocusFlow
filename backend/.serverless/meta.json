{
  "D:\\Projects\\Portfolio_Projects\\focusflow\\FocusFlow\\backend": {
    "versionSfCore": null,
    "versionFramework": "4.4.13",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>",
      "self": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "devquesting",
            "app": "focusflow",
            "service": "backend",
            "plugins": [
              "serverless-offline",
              "serverless-esbuild"
            ],
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "region": "us-east-1",
              "stage": "dev",
              "environment": {
                "AUTH0_DOMAIN": "dev-6zeb418i7xs8g1lc.us.auth0.com",
                "AUTH0_AUDIENCE": "focusflow-audience",
                "AUTH0_ISSUER": "https://dev-6zeb418i7xs8g1lc.us.auth0.com/",
                "DYNAMODB_TASKS_TABLE": "dev-focusflow-tasks",
                "DYNAMODB_USERS_TABLE": "dev-focusflow-users",
                "S3_ASSETS_BUCKET": "dev-focusflow-assets"
              },
              "iam": {
                "role": {
                  "statements": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:PutItem",
                        "dynamodb:GetItem",
                        "dynamodb:UpdateItem",
                        "dynamodb:DeleteItem",
                        "dynamodb:Scan",
                        "dynamodb:Query"
                      ],
                      "Resource": "*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:PutObject",
                        "s3:GetObject",
                        "s3:DeleteObject"
                      ],
                      "Resource": "*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "lambda:InvokeFunction"
                      ],
                      "Resource": [
                        "arn:aws:lambda:us-east-1:274552760074:function:backend-dev-auth0Authenticator"
                      ]
                    }
                  ]
                }
              },
              "versionFunctions": true
            },
            "custom": {
              "tableName": "dev-focusflow-tasks",
              "usersTableName": "dev-focusflow-users",
              "bucketName": "dev-focusflow-assets-274552760074",
              "esbuild": {
                "bundle": true,
                "minify": true,
                "sourcemap": true,
                "target": "node18",
                "external": [
                  "aws-sdk"
                ],
                "alias": {
                  "@handlers": "./src/handlers",
                  "@utils": "./src/utils",
                  "@models": "./src/layers/models",
                  "@schemas": "./src/layers/schemas"
                }
              }
            },
            "resources": {
              "Resources": {
                "TasksTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "dev-focusflow-tasks",
                    "BillingMode": "PAY_PER_REQUEST",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "taskId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "userId",
                        "KeyType": "HASH"
                      },
                      {
                        "AttributeName": "taskId",
                        "KeyType": "RANGE"
                      }
                    ]
                  }
                },
                "UsersTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "dev-focusflow-users",
                    "BillingMode": "PAY_PER_REQUEST",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "userId",
                        "KeyType": "HASH"
                      }
                    ]
                  }
                },
                "UserBackgroundsTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "dev-user-backgrounds",
                    "BillingMode": "PAY_PER_REQUEST",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "userId",
                        "KeyType": "HASH"
                      }
                    ]
                  }
                },
                "AssetsBucket": {
                  "Type": "AWS::S3::Bucket",
                  "Properties": {
                    "BucketName": "dev-focusflow-assets-274552760074",
                    "CorsConfiguration": {
                      "CorsRules": [
                        {
                          "AllowedHeaders": [
                            "*"
                          ],
                          "AllowedMethods": [
                            "GET",
                            "PUT",
                            "POST",
                            "DELETE",
                            "HEAD"
                          ],
                          "AllowedOrigins": [
                            "*"
                          ],
                          "MaxAge": 3000
                        }
                      ]
                    }
                  }
                }
              }
            },
            "functions": {
              "apiDocs": {
                "handler": "src/utils/swagger.handler",
                "events": [
                  {
                    "http": {
                      "path": "api-docs",
                      "method": "get"
                    }
                  }
                ]
              },
              "createTask": {
                "handler": "src/handlers/task/createTask.createTask",
                "events": [
                  {
                    "http": {
                      "path": "tasks",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "allowCredentials": "<REDACTED>",
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "X-Amz-Date",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent"
                        ]
                      },
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "getTask": {
                "handler": "src/handlers/task/getTask.getTasks",
                "events": [
                  {
                    "http": {
                      "path": "tasks",
                      "method": "get",
                      "cors": true,
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "updateTask": {
                "handler": "src/handlers/task/updateTask.updateTask",
                "events": [
                  {
                    "http": {
                      "path": "tasks/{taskId}",
                      "method": "put",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "X-Amz-Date",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent"
                        ]
                      },
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      },
                      "allowCredentials": "<REDACTED>"
                    }
                  }
                ]
              },
              "deleteTask": {
                "handler": "src/handlers/task/deleteTask.deleteTask",
                "events": [
                  {
                    "http": {
                      "path": "tasks/{taskId}",
                      "method": "delete",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "X-Amz-Date",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent"
                        ]
                      },
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      },
                      "allowCredentials": "<REDACTED>"
                    }
                  }
                ]
              },
              "manageTimer": {
                "handler": "src/handlers/timer/manageTimer.manageTimer",
                "events": [
                  {
                    "http": {
                      "path": "timer",
                      "method": "post",
                      "cors": {
                        "origin": "*",
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "X-Amz-Date",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent"
                        ]
                      },
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "updatePreferences": {
                "handler": "src/handlers/preferences/updatePreferences.updatePreferences",
                "events": [
                  {
                    "http": {
                      "path": "preferences",
                      "method": "put",
                      "cors": {
                        "origin": "*",
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "X-Amz-Date",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent"
                        ]
                      },
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "getMusic": {
                "handler": "src/handlers/music/getMusic.getMusic",
                "events": [
                  {
                    "http": {
                      "path": "music",
                      "method": "get",
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "getSounds": {
                "handler": "src/handlers/sounds/getSounds.getSounds",
                "events": [
                  {
                    "http": {
                      "path": "sounds",
                      "method": "get",
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "getBackgrounds": {
                "handler": "src/handlers/backgrounds/getBackgrounds.getBackgrounds",
                "events": [
                  {
                    "http": {
                      "path": "backgrounds/{userId}",
                      "method": "get",
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "addBackground": {
                "handler": "src/handlers/backgrounds/addBackground.addBackground",
                "events": [
                  {
                    "http": {
                      "path": "backgrounds/{userId}",
                      "method": "post",
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "deleteBackground": {
                "handler": "src/handlers/backgrounds/deleteBackground.deleteBackground",
                "events": [
                  {
                    "http": {
                      "path": "backgrounds/{userId}",
                      "method": "delete",
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "auth0Authorizer": {
                "handler": "src/handlers/auth/index.handler",
                "events": [
                  {
                    "http": {
                      "path": "auth/validate",
                      "method": "post",
                      "cors": true
                    }
                  }
                ]
              }
            }
          },
          "configFileDirPath": "D:\\Projects\\Portfolio_Projects\\focusflow\\FocusFlow\\backend",
          "config": {
            "type": "self"
          },
          "options": {},
          "stage": "dev",
          "dashboard": {
            "aws": {
              "accessKeyId": "<REDACTED>",
              "secretAccessKey": "<REDACTED>",
              "sessionToken": "<REDACTED>",
              "$source": {
                "CREDENTIALS_CODE": "<REDACTED>"
              }
            },
            "params": null,
            "accessKey": "<REDACTED>"
          },
          "logger": {
            "namespace": "s:core:resolver:self",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      },
      "aws": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "devquesting",
            "app": "focusflow",
            "service": "backend",
            "plugins": [
              "serverless-offline",
              "serverless-esbuild"
            ],
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "region": "us-east-1",
              "stage": "dev",
              "environment": {
                "AUTH0_DOMAIN": "dev-6zeb418i7xs8g1lc.us.auth0.com",
                "AUTH0_AUDIENCE": "focusflow-audience",
                "AUTH0_ISSUER": "https://dev-6zeb418i7xs8g1lc.us.auth0.com/",
                "DYNAMODB_TASKS_TABLE": "dev-focusflow-tasks",
                "DYNAMODB_USERS_TABLE": "dev-focusflow-users",
                "S3_ASSETS_BUCKET": "dev-focusflow-assets"
              },
              "iam": {
                "role": {
                  "statements": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:PutItem",
                        "dynamodb:GetItem",
                        "dynamodb:UpdateItem",
                        "dynamodb:DeleteItem",
                        "dynamodb:Scan",
                        "dynamodb:Query"
                      ],
                      "Resource": "*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:PutObject",
                        "s3:GetObject",
                        "s3:DeleteObject"
                      ],
                      "Resource": "*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "lambda:InvokeFunction"
                      ],
                      "Resource": [
                        "arn:aws:lambda:us-east-1:274552760074:function:backend-dev-auth0Authenticator"
                      ]
                    }
                  ]
                }
              },
              "versionFunctions": true
            },
            "custom": {
              "tableName": "dev-focusflow-tasks",
              "usersTableName": "dev-focusflow-users",
              "bucketName": "dev-focusflow-assets-274552760074",
              "esbuild": {
                "bundle": true,
                "minify": true,
                "sourcemap": true,
                "target": "node18",
                "external": [
                  "aws-sdk"
                ],
                "alias": {
                  "@handlers": "./src/handlers",
                  "@utils": "./src/utils",
                  "@models": "./src/layers/models",
                  "@schemas": "./src/layers/schemas"
                }
              }
            },
            "resources": {
              "Resources": {
                "TasksTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "dev-focusflow-tasks",
                    "BillingMode": "PAY_PER_REQUEST",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "taskId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "userId",
                        "KeyType": "HASH"
                      },
                      {
                        "AttributeName": "taskId",
                        "KeyType": "RANGE"
                      }
                    ]
                  }
                },
                "UsersTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "dev-focusflow-users",
                    "BillingMode": "PAY_PER_REQUEST",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "userId",
                        "KeyType": "HASH"
                      }
                    ]
                  }
                },
                "UserBackgroundsTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "dev-user-backgrounds",
                    "BillingMode": "PAY_PER_REQUEST",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "userId",
                        "KeyType": "HASH"
                      }
                    ]
                  }
                },
                "AssetsBucket": {
                  "Type": "AWS::S3::Bucket",
                  "Properties": {
                    "BucketName": "dev-focusflow-assets-274552760074",
                    "CorsConfiguration": {
                      "CorsRules": [
                        {
                          "AllowedHeaders": [
                            "*"
                          ],
                          "AllowedMethods": [
                            "GET",
                            "PUT",
                            "POST",
                            "DELETE",
                            "HEAD"
                          ],
                          "AllowedOrigins": [
                            "*"
                          ],
                          "MaxAge": 3000
                        }
                      ]
                    }
                  }
                }
              }
            },
            "functions": {
              "apiDocs": {
                "handler": "src/utils/swagger.handler",
                "events": [
                  {
                    "http": {
                      "path": "api-docs",
                      "method": "get"
                    }
                  }
                ]
              },
              "createTask": {
                "handler": "src/handlers/task/createTask.createTask",
                "events": [
                  {
                    "http": {
                      "path": "tasks",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "allowCredentials": "<REDACTED>",
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "X-Amz-Date",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent"
                        ]
                      },
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "getTask": {
                "handler": "src/handlers/task/getTask.getTasks",
                "events": [
                  {
                    "http": {
                      "path": "tasks",
                      "method": "get",
                      "cors": true,
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "updateTask": {
                "handler": "src/handlers/task/updateTask.updateTask",
                "events": [
                  {
                    "http": {
                      "path": "tasks/{taskId}",
                      "method": "put",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "X-Amz-Date",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent"
                        ]
                      },
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      },
                      "allowCredentials": "<REDACTED>"
                    }
                  }
                ]
              },
              "deleteTask": {
                "handler": "src/handlers/task/deleteTask.deleteTask",
                "events": [
                  {
                    "http": {
                      "path": "tasks/{taskId}",
                      "method": "delete",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "X-Amz-Date",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent"
                        ]
                      },
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      },
                      "allowCredentials": "<REDACTED>"
                    }
                  }
                ]
              },
              "manageTimer": {
                "handler": "src/handlers/timer/manageTimer.manageTimer",
                "events": [
                  {
                    "http": {
                      "path": "timer",
                      "method": "post",
                      "cors": {
                        "origin": "*",
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "X-Amz-Date",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent"
                        ]
                      },
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "updatePreferences": {
                "handler": "src/handlers/preferences/updatePreferences.updatePreferences",
                "events": [
                  {
                    "http": {
                      "path": "preferences",
                      "method": "put",
                      "cors": {
                        "origin": "*",
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "X-Amz-Date",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent"
                        ]
                      },
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "getMusic": {
                "handler": "src/handlers/music/getMusic.getMusic",
                "events": [
                  {
                    "http": {
                      "path": "music",
                      "method": "get",
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "getSounds": {
                "handler": "src/handlers/sounds/getSounds.getSounds",
                "events": [
                  {
                    "http": {
                      "path": "sounds",
                      "method": "get",
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "getBackgrounds": {
                "handler": "src/handlers/backgrounds/getBackgrounds.getBackgrounds",
                "events": [
                  {
                    "http": {
                      "path": "backgrounds/{userId}",
                      "method": "get",
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "addBackground": {
                "handler": "src/handlers/backgrounds/addBackground.addBackground",
                "events": [
                  {
                    "http": {
                      "path": "backgrounds/{userId}",
                      "method": "post",
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "deleteBackground": {
                "handler": "src/handlers/backgrounds/deleteBackground.deleteBackground",
                "events": [
                  {
                    "http": {
                      "path": "backgrounds/{userId}",
                      "method": "delete",
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "auth0Authorizer": {
                "handler": "src/handlers/auth/index.handler",
                "events": [
                  {
                    "http": {
                      "path": "auth/validate",
                      "method": "post",
                      "cors": true
                    }
                  }
                ]
              }
            }
          },
          "configFileDirPath": "D:\\Projects\\Portfolio_Projects\\focusflow\\FocusFlow\\backend",
          "config": {
            "type": "aws"
          },
          "options": {},
          "stage": "dev",
          "dashboard": {
            "aws": {
              "accessKeyId": "<REDACTED>",
              "secretAccessKey": "<REDACTED>",
              "sessionToken": "<REDACTED>",
              "$source": {
                "CREDENTIALS_CODE": "<REDACTED>"
              }
            },
            "params": null,
            "accessKey": "<REDACTED>"
          },
          "logger": {
            "namespace": "s:core:resolver:aws",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>",
          "isDefaultConfig": true
        },
        "resolvers": {}
      },
      "sls": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "devquesting",
            "app": "focusflow",
            "service": "backend",
            "plugins": [
              "serverless-offline",
              "serverless-esbuild"
            ],
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "region": "us-east-1",
              "stage": "dev",
              "environment": {
                "AUTH0_DOMAIN": "dev-6zeb418i7xs8g1lc.us.auth0.com",
                "AUTH0_AUDIENCE": "focusflow-audience",
                "AUTH0_ISSUER": "https://dev-6zeb418i7xs8g1lc.us.auth0.com/",
                "DYNAMODB_TASKS_TABLE": "dev-focusflow-tasks",
                "DYNAMODB_USERS_TABLE": "dev-focusflow-users",
                "S3_ASSETS_BUCKET": "dev-focusflow-assets"
              },
              "iam": {
                "role": {
                  "statements": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:PutItem",
                        "dynamodb:GetItem",
                        "dynamodb:UpdateItem",
                        "dynamodb:DeleteItem",
                        "dynamodb:Scan",
                        "dynamodb:Query"
                      ],
                      "Resource": "*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:PutObject",
                        "s3:GetObject",
                        "s3:DeleteObject"
                      ],
                      "Resource": "*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "lambda:InvokeFunction"
                      ],
                      "Resource": [
                        "arn:aws:lambda:us-east-1:274552760074:function:backend-dev-auth0Authenticator"
                      ]
                    }
                  ]
                }
              },
              "versionFunctions": true
            },
            "custom": {
              "tableName": "dev-focusflow-tasks",
              "usersTableName": "dev-focusflow-users",
              "bucketName": "dev-focusflow-assets-274552760074",
              "esbuild": {
                "bundle": true,
                "minify": true,
                "sourcemap": true,
                "target": "node18",
                "external": [
                  "aws-sdk"
                ],
                "alias": {
                  "@handlers": "./src/handlers",
                  "@utils": "./src/utils",
                  "@models": "./src/layers/models",
                  "@schemas": "./src/layers/schemas"
                }
              }
            },
            "resources": {
              "Resources": {
                "TasksTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "dev-focusflow-tasks",
                    "BillingMode": "PAY_PER_REQUEST",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "taskId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "userId",
                        "KeyType": "HASH"
                      },
                      {
                        "AttributeName": "taskId",
                        "KeyType": "RANGE"
                      }
                    ]
                  }
                },
                "UsersTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "dev-focusflow-users",
                    "BillingMode": "PAY_PER_REQUEST",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "userId",
                        "KeyType": "HASH"
                      }
                    ]
                  }
                },
                "UserBackgroundsTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "dev-user-backgrounds",
                    "BillingMode": "PAY_PER_REQUEST",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "userId",
                        "KeyType": "HASH"
                      }
                    ]
                  }
                },
                "AssetsBucket": {
                  "Type": "AWS::S3::Bucket",
                  "Properties": {
                    "BucketName": "dev-focusflow-assets-274552760074",
                    "CorsConfiguration": {
                      "CorsRules": [
                        {
                          "AllowedHeaders": [
                            "*"
                          ],
                          "AllowedMethods": [
                            "GET",
                            "PUT",
                            "POST",
                            "DELETE",
                            "HEAD"
                          ],
                          "AllowedOrigins": [
                            "*"
                          ],
                          "MaxAge": 3000
                        }
                      ]
                    }
                  }
                }
              }
            },
            "functions": {
              "apiDocs": {
                "handler": "src/utils/swagger.handler",
                "events": [
                  {
                    "http": {
                      "path": "api-docs",
                      "method": "get"
                    }
                  }
                ]
              },
              "createTask": {
                "handler": "src/handlers/task/createTask.createTask",
                "events": [
                  {
                    "http": {
                      "path": "tasks",
                      "method": "post",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "allowCredentials": "<REDACTED>",
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "X-Amz-Date",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent"
                        ]
                      },
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "getTask": {
                "handler": "src/handlers/task/getTask.getTasks",
                "events": [
                  {
                    "http": {
                      "path": "tasks",
                      "method": "get",
                      "cors": true,
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "updateTask": {
                "handler": "src/handlers/task/updateTask.updateTask",
                "events": [
                  {
                    "http": {
                      "path": "tasks/{taskId}",
                      "method": "put",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "X-Amz-Date",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent"
                        ]
                      },
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      },
                      "allowCredentials": "<REDACTED>"
                    }
                  }
                ]
              },
              "deleteTask": {
                "handler": "src/handlers/task/deleteTask.deleteTask",
                "events": [
                  {
                    "http": {
                      "path": "tasks/{taskId}",
                      "method": "delete",
                      "cors": {
                        "origin": "http://localhost:5173",
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "X-Amz-Date",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent"
                        ]
                      },
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      },
                      "allowCredentials": "<REDACTED>"
                    }
                  }
                ]
              },
              "manageTimer": {
                "handler": "src/handlers/timer/manageTimer.manageTimer",
                "events": [
                  {
                    "http": {
                      "path": "timer",
                      "method": "post",
                      "cors": {
                        "origin": "*",
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "X-Amz-Date",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent"
                        ]
                      },
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "updatePreferences": {
                "handler": "src/handlers/preferences/updatePreferences.updatePreferences",
                "events": [
                  {
                    "http": {
                      "path": "preferences",
                      "method": "put",
                      "cors": {
                        "origin": "*",
                        "headers": [
                          "Content-Type",
                          "Authorization",
                          "X-Requested-With",
                          "X-Amz-Date",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent"
                        ]
                      },
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "getMusic": {
                "handler": "src/handlers/music/getMusic.getMusic",
                "events": [
                  {
                    "http": {
                      "path": "music",
                      "method": "get",
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "getSounds": {
                "handler": "src/handlers/sounds/getSounds.getSounds",
                "events": [
                  {
                    "http": {
                      "path": "sounds",
                      "method": "get",
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "getBackgrounds": {
                "handler": "src/handlers/backgrounds/getBackgrounds.getBackgrounds",
                "events": [
                  {
                    "http": {
                      "path": "backgrounds/{userId}",
                      "method": "get",
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "addBackground": {
                "handler": "src/handlers/backgrounds/addBackground.addBackground",
                "events": [
                  {
                    "http": {
                      "path": "backgrounds/{userId}",
                      "method": "post",
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "deleteBackground": {
                "handler": "src/handlers/backgrounds/deleteBackground.deleteBackground",
                "events": [
                  {
                    "http": {
                      "path": "backgrounds/{userId}",
                      "method": "delete",
                      "authorizer": {
                        "type": "REQUEST",
                        "identitySource": "method.request.header.Authorization",
                        "name": "auth0Authorizer"
                      }
                    }
                  }
                ]
              },
              "auth0Authorizer": {
                "handler": "src/handlers/auth/index.handler",
                "events": [
                  {
                    "http": {
                      "path": "auth/validate",
                      "method": "post",
                      "cors": true
                    }
                  }
                ]
              }
            }
          },
          "configFileDirPath": "D:\\Projects\\Portfolio_Projects\\focusflow\\FocusFlow\\backend",
          "config": {
            "type": "sls"
          },
          "options": {},
          "stage": "dev",
          "dashboard": {
            "aws": {
              "accessKeyId": "<REDACTED>",
              "secretAccessKey": "<REDACTED>",
              "sessionToken": "<REDACTED>",
              "$source": {
                "CREDENTIALS_CODE": "<REDACTED>"
              }
            },
            "params": null,
            "accessKey": "<REDACTED>"
          },
          "logger": {
            "namespace": "s:core:resolver:sls",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "D:\\Projects\\Portfolio_Projects\\focusflow\\FocusFlow\\backend",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "devquesting",
      "app": "focusflow",
      "service": "backend",
      "plugins": [
        "serverless-offline",
        "serverless-esbuild"
      ],
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "region": "us-east-1",
        "stage": "dev",
        "environment": {
          "AUTH0_DOMAIN": "dev-6zeb418i7xs8g1lc.us.auth0.com",
          "AUTH0_AUDIENCE": "focusflow-audience",
          "AUTH0_ISSUER": "https://dev-6zeb418i7xs8g1lc.us.auth0.com/",
          "DYNAMODB_TASKS_TABLE": "dev-focusflow-tasks",
          "DYNAMODB_USERS_TABLE": "dev-focusflow-users",
          "S3_ASSETS_BUCKET": "dev-focusflow-assets"
        },
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "dynamodb:PutItem",
                  "dynamodb:GetItem",
                  "dynamodb:UpdateItem",
                  "dynamodb:DeleteItem",
                  "dynamodb:Scan",
                  "dynamodb:Query"
                ],
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "s3:PutObject",
                  "s3:GetObject",
                  "s3:DeleteObject"
                ],
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "lambda:InvokeFunction"
                ],
                "Resource": [
                  "arn:aws:lambda:us-east-1:274552760074:function:backend-dev-auth0Authenticator"
                ]
              }
            ]
          }
        },
        "versionFunctions": true
      },
      "custom": {
        "tableName": "dev-focusflow-tasks",
        "usersTableName": "dev-focusflow-users",
        "bucketName": "dev-focusflow-assets-274552760074",
        "esbuild": {
          "bundle": true,
          "minify": true,
          "sourcemap": true,
          "target": "node18",
          "external": [
            "aws-sdk"
          ],
          "alias": {
            "@handlers": "./src/handlers",
            "@utils": "./src/utils",
            "@models": "./src/layers/models",
            "@schemas": "./src/layers/schemas"
          }
        }
      },
      "resources": {
        "Resources": {
          "TasksTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "dev-focusflow-tasks",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "taskId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "taskId",
                  "KeyType": "RANGE"
                }
              ]
            }
          },
          "UsersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "dev-focusflow-users",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "UserBackgroundsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "dev-user-backgrounds",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "AssetsBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "dev-focusflow-assets-274552760074",
              "CorsConfiguration": {
                "CorsRules": [
                  {
                    "AllowedHeaders": [
                      "*"
                    ],
                    "AllowedMethods": [
                      "GET",
                      "PUT",
                      "POST",
                      "DELETE",
                      "HEAD"
                    ],
                    "AllowedOrigins": [
                      "*"
                    ],
                    "MaxAge": 3000
                  }
                ]
              }
            }
          }
        }
      },
      "functions": {
        "apiDocs": {
          "handler": "src/utils/swagger.handler",
          "events": [
            {
              "http": {
                "path": "api-docs",
                "method": "get"
              }
            }
          ]
        },
        "createTask": {
          "handler": "src/handlers/task/createTask.createTask",
          "events": [
            {
              "http": {
                "path": "tasks",
                "method": "post",
                "cors": {
                  "origin": "http://localhost:5173",
                  "allowCredentials": "<REDACTED>",
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "X-Amz-Date",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent"
                  ]
                },
                "authorizer": {
                  "type": "REQUEST",
                  "identitySource": "method.request.header.Authorization",
                  "name": "auth0Authorizer"
                }
              }
            }
          ]
        },
        "getTask": {
          "handler": "src/handlers/task/getTask.getTasks",
          "events": [
            {
              "http": {
                "path": "tasks",
                "method": "get",
                "cors": true,
                "authorizer": {
                  "type": "REQUEST",
                  "identitySource": "method.request.header.Authorization",
                  "name": "auth0Authorizer"
                }
              }
            }
          ]
        },
        "updateTask": {
          "handler": "src/handlers/task/updateTask.updateTask",
          "events": [
            {
              "http": {
                "path": "tasks/{taskId}",
                "method": "put",
                "cors": {
                  "origin": "http://localhost:5173",
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "X-Amz-Date",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent"
                  ]
                },
                "authorizer": {
                  "type": "REQUEST",
                  "identitySource": "method.request.header.Authorization",
                  "name": "auth0Authorizer"
                },
                "allowCredentials": "<REDACTED>"
              }
            }
          ]
        },
        "deleteTask": {
          "handler": "src/handlers/task/deleteTask.deleteTask",
          "events": [
            {
              "http": {
                "path": "tasks/{taskId}",
                "method": "delete",
                "cors": {
                  "origin": "http://localhost:5173",
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "X-Amz-Date",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent"
                  ]
                },
                "authorizer": {
                  "type": "REQUEST",
                  "identitySource": "method.request.header.Authorization",
                  "name": "auth0Authorizer"
                },
                "allowCredentials": "<REDACTED>"
              }
            }
          ]
        },
        "manageTimer": {
          "handler": "src/handlers/timer/manageTimer.manageTimer",
          "events": [
            {
              "http": {
                "path": "timer",
                "method": "post",
                "cors": {
                  "origin": "*",
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "X-Amz-Date",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent"
                  ]
                },
                "authorizer": {
                  "type": "REQUEST",
                  "identitySource": "method.request.header.Authorization",
                  "name": "auth0Authorizer"
                }
              }
            }
          ]
        },
        "updatePreferences": {
          "handler": "src/handlers/preferences/updatePreferences.updatePreferences",
          "events": [
            {
              "http": {
                "path": "preferences",
                "method": "put",
                "cors": {
                  "origin": "*",
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "X-Amz-Date",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent"
                  ]
                },
                "authorizer": {
                  "type": "REQUEST",
                  "identitySource": "method.request.header.Authorization",
                  "name": "auth0Authorizer"
                }
              }
            }
          ]
        },
        "getMusic": {
          "handler": "src/handlers/music/getMusic.getMusic",
          "events": [
            {
              "http": {
                "path": "music",
                "method": "get",
                "authorizer": {
                  "type": "REQUEST",
                  "identitySource": "method.request.header.Authorization",
                  "name": "auth0Authorizer"
                }
              }
            }
          ]
        },
        "getSounds": {
          "handler": "src/handlers/sounds/getSounds.getSounds",
          "events": [
            {
              "http": {
                "path": "sounds",
                "method": "get",
                "authorizer": {
                  "type": "REQUEST",
                  "identitySource": "method.request.header.Authorization",
                  "name": "auth0Authorizer"
                }
              }
            }
          ]
        },
        "getBackgrounds": {
          "handler": "src/handlers/backgrounds/getBackgrounds.getBackgrounds",
          "events": [
            {
              "http": {
                "path": "backgrounds/{userId}",
                "method": "get",
                "authorizer": {
                  "type": "REQUEST",
                  "identitySource": "method.request.header.Authorization",
                  "name": "auth0Authorizer"
                }
              }
            }
          ]
        },
        "addBackground": {
          "handler": "src/handlers/backgrounds/addBackground.addBackground",
          "events": [
            {
              "http": {
                "path": "backgrounds/{userId}",
                "method": "post",
                "authorizer": {
                  "type": "REQUEST",
                  "identitySource": "method.request.header.Authorization",
                  "name": "auth0Authorizer"
                }
              }
            }
          ]
        },
        "deleteBackground": {
          "handler": "src/handlers/backgrounds/deleteBackground.deleteBackground",
          "events": [
            {
              "http": {
                "path": "backgrounds/{userId}",
                "method": "delete",
                "authorizer": {
                  "type": "REQUEST",
                  "identitySource": "method.request.header.Authorization",
                  "name": "auth0Authorizer"
                }
              }
            }
          ]
        },
        "auth0Authorizer": {
          "handler": "src/handlers/auth/index.handler",
          "events": [
            {
              "http": {
                "path": "auth/validate",
                "method": "post",
                "cors": true
              }
            }
          ]
        }
      }
    },
    "serviceRawFile": "# FocusFlow Serverless Configuration\r\n\r\norg: devquesting\r\napp: focusflow\r\nservice: backend\r\n\r\nplugins:\r\n  - serverless-offline\r\n  - serverless-esbuild\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs20.x\r\n  region: us-east-1\r\n  stage: dev\r\n  environment:\r\n    AUTH0_DOMAIN: dev-6zeb418i7xs8g1lc.us.auth0.com\r\n    AUTH0_AUDIENCE: focusflow-audience\r\n    AUTH0_ISSUER: https://dev-6zeb418i7xs8g1lc.us.auth0.com/\r\n    DYNAMODB_TASKS_TABLE: dev-focusflow-tasks\r\n    DYNAMODB_USERS_TABLE: dev-focusflow-users\r\n    S3_ASSETS_BUCKET: dev-focusflow-assets\r\n  iam:\r\n    role:\r\n      statements:\r\n        - Effect: Allow\r\n          Action:\r\n            - dynamodb:PutItem\r\n            - dynamodb:GetItem\r\n            - dynamodb:UpdateItem\r\n            - dynamodb:DeleteItem\r\n            - dynamodb:Scan\r\n            - dynamodb:Query\r\n          Resource: \"*\"\r\n        - Effect: Allow\r\n          Action:\r\n            - s3:PutObject\r\n            - s3:GetObject\r\n            - s3:DeleteObject\r\n          Resource: \"*\"\r\n        - Effect: Allow\r\n          Action:\r\n            - lambda:InvokeFunction\r\n          Resource:\r\n            - arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:service}-${self:provider.stage}-auth0Authenticator\r\n\r\ncustom:\r\n  tableName: ${sls:stage}-focusflow-tasks\r\n  usersTableName: ${sls:stage}-focusflow-users\r\n  bucketName: ${sls:stage}-focusflow-assets-${aws:accountId}\r\n  esbuild:\r\n    bundle: true\r\n    minify: true\r\n    sourcemap: true\r\n    target: 'node18'\r\n    external:\r\n      - aws-sdk\r\n    alias:\r\n      \"@handlers\": \"./src/handlers\"\r\n      \"@utils\": \"./src/utils\"\r\n      \"@models\": \"./src/layers/models\"\r\n      \"@schemas\": \"./src/layers/schemas\"\r\n\r\nresources:\r\n  Resources:\r\n    # DynamoDB Table for Tasks\r\n    TasksTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: ${self:custom.tableName}\r\n        BillingMode: PAY_PER_REQUEST\r\n        AttributeDefinitions:\r\n          - AttributeName: userId\r\n            AttributeType: S\r\n          - AttributeName: taskId\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: userId\r\n            KeyType: HASH\r\n          - AttributeName: taskId\r\n            KeyType: RANGE\r\n\r\n    # DynamoDB Table for Users\r\n    UsersTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: ${self:custom.usersTableName}\r\n        BillingMode: PAY_PER_REQUEST\r\n        AttributeDefinitions:\r\n          - AttributeName: userId\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: userId\r\n            KeyType: HASH\r\n\r\n    UserBackgroundsTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: dev-user-backgrounds\r\n        BillingMode: PAY_PER_REQUEST\r\n        AttributeDefinitions:\r\n          - AttributeName: userId\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: userId\r\n            KeyType: HASH\r\n\r\n    # S3 Bucket for Assets\r\n    AssetsBucket:\r\n      Type: AWS::S3::Bucket\r\n      Properties:\r\n        BucketName: ${self:custom.bucketName}\r\n        CorsConfiguration:\r\n          CorsRules:\r\n            - AllowedHeaders: [\"*\"]\r\n              AllowedMethods: [GET, PUT, POST, DELETE, HEAD]\r\n              AllowedOrigins: [\"*\"]\r\n              MaxAge: 3000\r\n\r\nfunctions:\r\n  # Swagger UI\r\n  apiDocs:\r\n    handler: src/utils/swagger.handler\r\n    events:\r\n      - http:\r\n          path: api-docs\r\n          method: get\r\n  # Task Management\r\n  createTask:\r\n    handler: src/handlers/task/createTask.createTask\r\n    events:\r\n      - http:\r\n          path: tasks\r\n          method: post\r\n          cors:\r\n            origin: \"http://localhost:5173\"\r\n            allowCredentials: true\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - X-Amz-Date\r\n              - X-Api-Key\r\n              - X-Amz-Security-Token\r\n              - X-Amz-User-Agent\r\n          authorizer:\r\n            type: REQUEST\r\n            identitySource: method.request.header.Authorization\r\n            name: auth0Authorizer\r\n\r\n  getTask:\r\n    handler: src/handlers/task/getTask.getTasks\r\n    events:\r\n      - http:\r\n          path: tasks\r\n          method: get\r\n          cors: true\r\n          authorizer:\r\n            type: REQUEST\r\n            identitySource: method.request.header.Authorization\r\n            name: auth0Authorizer\r\n\r\n  updateTask:\r\n    handler: src/handlers/task/updateTask.updateTask\r\n    events:\r\n      - http:\r\n          path: tasks/{taskId}\r\n          method: put\r\n          cors:\r\n            origin: \"http://localhost:5173\" # Use '*' for all origins or specify 'http://localhost:5173' for development\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - X-Amz-Date\r\n              - X-Api-Key\r\n              - X-Amz-Security-Token\r\n              - X-Amz-User-Agent\r\n          authorizer:\r\n            type: REQUEST\r\n            identitySource: method.request.header.Authorization\r\n            name: auth0Authorizer\r\n          allowCredentials: true\r\n\r\n  deleteTask:\r\n    handler: src/handlers/task/deleteTask.deleteTask\r\n    events:\r\n      - http:\r\n          path: tasks/{taskId}\r\n          method: delete\r\n          cors:\r\n            origin: \"http://localhost:5173\" # Use '*' for all origins or specify 'http://localhost:5173' for development\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - X-Amz-Date\r\n              - X-Api-Key\r\n              - X-Amz-Security-Token\r\n              - X-Amz-User-Agent\r\n          authorizer:\r\n            type: REQUEST\r\n            identitySource: method.request.header.Authorization\r\n            name: auth0Authorizer\r\n          allowCredentials: true\r\n\r\n  # Pomodoro Timer\r\n  manageTimer:\r\n    handler: src/handlers/timer/manageTimer.manageTimer\r\n    events:\r\n      - http:\r\n          path: timer\r\n          method: post\r\n          cors:\r\n            origin: \"*\" # Use '*' for all origins or specify 'http://localhost:5173' for development\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - X-Amz-Date\r\n              - X-Api-Key\r\n              - X-Amz-Security-Token\r\n              - X-Amz-User-Agent\r\n          authorizer:\r\n            type: REQUEST\r\n            identitySource: method.request.header.Authorization\r\n            name: auth0Authorizer\r\n\r\n  # User Preferences\r\n  updatePreferences:\r\n    handler: src/handlers/preferences/updatePreferences.updatePreferences\r\n    events:\r\n      - http:\r\n          path: preferences\r\n          method: put\r\n          cors:\r\n            origin: \"*\" # Use '*' for all origins or specify 'http://localhost:5173' for development\r\n            headers:\r\n              - Content-Type\r\n              - Authorization\r\n              - X-Requested-With\r\n              - X-Amz-Date\r\n              - X-Api-Key\r\n              - X-Amz-Security-Token\r\n              - X-Amz-User-Agent\r\n          authorizer:\r\n            type: REQUEST\r\n            identitySource: method.request.header.Authorization\r\n            name: auth0Authorizer\r\n\r\n  # Music Player\r\n  getMusic:\r\n    handler: src/handlers/music/getMusic.getMusic\r\n    events:\r\n      - http:\r\n          path: music\r\n          method: get\r\n          authorizer:\r\n            type: REQUEST\r\n            identitySource: method.request.header.Authorization\r\n            name: auth0Authorizer\r\n\r\n  # Sounds\r\n  getSounds:\r\n    handler: src/handlers/sounds/getSounds.getSounds\r\n    events:\r\n      - http:\r\n          path: sounds\r\n          method: get\r\n          authorizer:\r\n            type: REQUEST\r\n            identitySource: method.request.header.Authorization\r\n            name: auth0Authorizer\r\n\r\n  #backgrounds\r\n  getBackgrounds:\r\n    handler: src/handlers/backgrounds/getBackgrounds.getBackgrounds\r\n    events:\r\n      - http:\r\n          path: backgrounds/{userId}\r\n          method: get\r\n          authorizer:\r\n            type: REQUEST\r\n            identitySource: method.request.header.Authorization\r\n            name: auth0Authorizer\r\n\r\n  addBackground:\r\n    handler: src/handlers/backgrounds/addBackground.addBackground\r\n    events:\r\n      - http:\r\n          path: backgrounds/{userId}\r\n          method: post\r\n          authorizer:\r\n            type: REQUEST\r\n            identitySource: method.request.header.Authorization\r\n            name: auth0Authorizer\r\n\r\n  deleteBackground:\r\n    handler: src/handlers/backgrounds/deleteBackground.deleteBackground\r\n    events:\r\n      - http:\r\n          path: backgrounds/{userId}\r\n          method: delete\r\n          authorizer:\r\n            type: REQUEST\r\n            identitySource: method.request.header.Authorization\r\n            name: auth0Authorizer\r\n\r\n  #custom auth\r\n  auth0Authorizer:\r\n    handler: src/handlers/auth/index.handler\r\n    events:\r\n      - http:\r\n          path: auth/validate\r\n          method: post\r\n          cors: true\r\n",
    "command": [
      "offline"
    ],
    "options": {},
    "error": {
      "message": "Serverless now includes ESBuild and supports Typescript out-of-the-box. But this conflicts with the plugin 'serverless-esbuild'.\nYou can either remove this plugin and try Serverless's ESBuild support builtin, or you can set 'build.esbuild' to false in your 'serverless.yml'.\nFor more information go to, https://slss.io/buildoptions",
      "stack": "ServerlessError2: Serverless now includes ESBuild and supports Typescript out-of-the-box. But this conflicts with the plugin 'serverless-esbuild'.\nYou can either remove this plugin and try Serverless's ESBuild support builtin, or you can set 'build.esbuild' to false in your 'serverless.yml'.\nFor more information go to, https://slss.io/buildoptions\n    at PluginManager.addPlugin (file:///C:/Users/david/.serverless/releases/4.4.13/package/dist/sf-core.js:925:65)\n    at file:///C:/Users/david/.serverless/releases/4.4.13/package/dist/sf-core.js:925:1435\n    at Array.forEach (<anonymous>)\n    at PluginManager.loadAllPlugins (file:///C:/Users/david/.serverless/releases/4.4.13/package/dist/sf-core.js:925:1413)\n    at async Serverless.init (file:///C:/Users/david/.serverless/releases/4.4.13/package/dist/sf-core.js:932:9985)\n    at async runFramework (file:///C:/Users/david/.serverless/releases/4.4.13/package/dist/sf-core.js:980:1336)\n    at async route (file:///C:/Users/david/.serverless/releases/4.4.13/package/dist/sf-core.js:1010:14772)\n    at async Object.run2 [as run] (file:///C:/Users/david/.serverless/releases/4.4.13/package/dist/sf-core.js:1010:15173)\n    at async run3 (file:///C:/Users/david/.serverless/releases/4.4.13/package/dist/sf-core.js:1010:16435)",
      "code": "PLUGIN_TYPESCRIPT_CONFLICT"
    },
    "params": {},
    "machineId": "8cc2a95bb80a2de81936042440317e7e",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "a00e51c8-04d8-4141-a358-fe9649ff9764",
    "orgName": "devquesting",
    "userId": "4g9dD64cGTjcqpfG9h",
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": true,
        "monitoring": false
      },
      "orgObservabilityIntegrations": null,
      "serviceAppId": "p5lvl4hDnczWh3Vp91",
      "serviceProvider": {
        "accessKeyId": "<REDACTED>",
        "secretAccessKey": "<REDACTED>",
        "sessionToken": "<REDACTED>",
        "$source": {
          "CREDENTIALS_CODE": "<REDACTED>"
        }
      },
      "instanceParameters": null
    },
    "userName": "devquesting",
    "subscription": null,
    "userEmail": "dev.dav.kup@gmail.com",
    "serviceProviderAwsRegion": "us-east-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "274552760074",
    "projectType": "traditional",
    "versionSf": "4.4.13",
    "serviceUniqueId": "arn:aws:cloudformation:us-east-1:274552760074:stack/backend-dev/80499180-a60f-11ef-b8d5-124d3fdcb0b3",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:274552760074:stack/backend-dev/80499180-a60f-11ef-b8d5-124d3fdcb0b3",
    "serviceProviderAwsCfStackCreated": "2024-11-19T00:44:57.988Z",
    "serviceProviderAwsCfStackUpdated": "2024-11-26T05:29:09.461Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "ManageTimerLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:274552760074:function:backend-dev-manageTimer:12",
        "Description": "Current Lambda function version",
        "ExportName": "sls-backend-dev-ManageTimerLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "AddBackgroundLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:274552760074:function:backend-dev-addBackground:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-backend-dev-AddBackgroundLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UpdateTaskLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:274552760074:function:backend-dev-updateTask:12",
        "Description": "Current Lambda function version",
        "ExportName": "sls-backend-dev-UpdateTaskLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UpdatePreferencesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:274552760074:function:backend-dev-updatePreferences:12",
        "Description": "Current Lambda function version",
        "ExportName": "sls-backend-dev-UpdatePreferencesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CreateTaskLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:274552760074:function:backend-dev-createTask:12",
        "Description": "Current Lambda function version",
        "ExportName": "sls-backend-dev-CreateTaskLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UpdateBackgroundLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:274552760074:function:backend-dev-updateBackground:12",
        "Description": "Current Lambda function version",
        "ExportName": "sls-backend-dev-UpdateBackgroundLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetTaskLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:274552760074:function:backend-dev-getTask:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-backend-dev-GetTaskLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "DeleteBackgroundLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:274552760074:function:backend-dev-deleteBackground:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-backend-dev-DeleteBackgroundLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "InitializeBackgroundsLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:274552760074:function:backend-dev-initializeBackgrounds:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-backend-dev-InitializeBackgroundsLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-be0e5fd9-feac",
        "ExportName": "sls-backend-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "GetBackgroundsLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:274552760074:function:backend-dev-getBackgrounds:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-backend-dev-GetBackgroundsLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "DeleteTaskLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:274552760074:function:backend-dev-deleteTask:12",
        "Description": "Current Lambda function version",
        "ExportName": "sls-backend-dev-DeleteTaskLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetMusicLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:274552760074:function:backend-dev-getMusic:12",
        "Description": "Current Lambda function version",
        "ExportName": "sls-backend-dev-GetMusicLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "Auth0AuthorizerLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:274552760074:function:backend-dev-auth0Authorizer:8",
        "Description": "Current Lambda function version",
        "ExportName": "sls-backend-dev-Auth0AuthorizerLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://b94obf2k3g.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-backend-dev-ServiceEndpoint"
      }
    ]
  }
}